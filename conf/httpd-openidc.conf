Include /etc/apache2/mods-available/auth_openidc.load
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so

Listen 81

# To use mod_auth_openidc in a forwardauth server, the workaround below is used
# to send the forwarded URI to a virtual host to make it look like a "real" request
# is coming in, letting mod_auth_openidc do its redirect/allow/validation magic.
# Otherwise, on :80, the URI would be the URI of the forwardauth request.

<VirtualHost *:80>
    DocumentRoot /usr/local/apache2/htdocs

    <Location />
        RewriteEngine  on
        RewriteRule ^ http://localhost:81%{HTTP:X-Forwarded-Uri} [P,L]
        ProxyPassReverse http://localhost:81/
    </Location>
</VirtualHost>

# Listen on localhost only; this vhost should not be reachable from the outside
<VirtualHost localhost:81>
    DocumentRoot /usr/local/apache2/htdocs

    OIDCRedirectURI ${OIDC_REDIRECT_URI}
    # Make all claims available as request headers to mirror them further down
    OIDCPassClaimsAs both

    OIDCProviderMetadataURL "${OIDC_PROVIDER_METADATA_URL}"
    OIDCClientID "${OIDC_CLIENT_ID}"
    OIDCClientSecret "${OIDC_CLIENT_SECRET}"

    OIDCCryptoPassphrase "${OIDC_CRYPTO_PASSPHRASE}"

    OIDCScope "${OIDC_SCOPE}"

    OIDCRemoteUserClaim "${OIDC_REMOTE_USER_CLAIM}"

    OIDCInfoHook userinfo

    ${OIDC_VHOST_EXTRA_CONFIG}

    IncludeOptional /conf/vhost.d/*.conf

    <Location />
        AuthType openid-connect
        Require valid-user

        Header set X-Forwarded-User "%{OIDC_CLAIM_${OIDC_REMOTE_USER_CLAIM}}e" env=OIDC_access_token
        # Mirror all OIDC headers to response headers
        Header echo ^OIDC env=OIDC_access_token

        RewriteEngine  on
        RewriteCond %{REQUEST_URI} !^/$
        RewriteCond %{REQUEST_URI} !^/index.html$
        RewriteCond %{REQUEST_URI} !^/modauthopenidc__redirect_uri
        RewriteRule ^ index.html [L]

        <If "'${OIDC_REQUIRE_CLAIM}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_1}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_1}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_2}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_2}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_3}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_3}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_4}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_4}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_5}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_5}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_6}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_6}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_7}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_7}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_8}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_8}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_9}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_9}"
        </If>
        <If "'${OIDC_REQUIRE_CLAIM_10}' != ''">
            Require claim "${OIDC_REQUIRE_CLAIM_10}"
        </If>

        ${OIDC_LOCATION_EXTRA_CONFIG}

        IncludeOptional /conf/location.d/*.conf
    </Location>
</VirtualHost>
